<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprHeroIdleLeft</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>sprMask</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>image_speed = 0.135
hair = 1
clean = 1
foot = 0
footside = 1
active = 1
line = 0
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/*
if room = rmThirdFloor {
    if position_meeting(x, y, objDentistVision)
    {
        my_id = instance_position(x, y, objDentistVision)
        my_id.
    }
}
*/

if x &gt; 529 and room = rmFirstLevel {
    //x += 2
    active = 0
    objEffector.next = 1
    objEffector.nextlevel = rmFirstFloor
}

if global.dialogue = 0 and global.death = 0 and active = 1{

if keyboard_check(ord("S")) { if !place_meeting(x, y + 2.5, objWall) y += 2 sprite_index = sprHeroWalkDown } else
if keyboard_check(ord("W")) { if !place_meeting(x, y - 2.5, objWall) y -= 2 sprite_index = sprHeroWalkUp }
if keyboard_check(ord("A")) { if !place_meeting(x - 2.5, y, objWall) x -= 2 sprite_index = sprHeroWalkRight } else
if keyboard_check(ord("D")) { if !place_meeting(x + 2.5, y, objWall) x += 2 sprite_index = sprHeroWalkLeft }
if !keyboard_check(ord("S")) and !keyboard_check(ord("W")) and !keyboard_check(ord("A")) and !keyboard_check(ord("D")) { 
    switch (sprite_index)
    {
    case sprHeroWalkDown:
    sprite_index = sprHeroIdleDown
    break;
    case sprHeroWalkUp:
    sprite_index = sprHeroIdleUp
    break;
    case sprHeroWalkLeft:
    sprite_index = sprHeroIdleLeft
    break;
    case sprHeroWalkRight:
    sprite_index = sprHeroIdleRight
    break;
    }
}
} else {
    switch (sprite_index)
    {
    case sprHeroWalkDown:
    sprite_index = sprHeroIdleDown
    break;
    case sprHeroWalkUp:
    sprite_index = sprHeroIdleUp
    break;
    case sprHeroWalkLeft:
    sprite_index = sprHeroIdleLeft
    break;
    case sprHeroWalkRight:
    sprite_index = sprHeroIdleRight
    break;
    }
}
depth = -y

if x &lt; 0 x = 0
if x &gt; room_width x = room_width
if y &lt; 0 y = 0
if y &gt; room_height y = room_height
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if room = rmFirstLevel {
    clean = 0
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_sprite_ext(sprite_index, image_index, x, y, image_xscale * 0.9, image_yscale * -0.3 * 0.9, image_angle, c_black, 0.3)
draw_sprite_ext(sprite_index, image_index, x, y, image_xscale * 0.9, image_yscale * 0.9, image_angle, image_blend, image_alpha)

if clean = 0 and room = rmFirstLevel and (sprite_index = sprHeroWalkLeft or sprite_index = sprHeroWalkRight or sprite_index = sprHeroWalkUp or sprite_index = sprHeroWalkDown) {
    if foot &lt;= 0 {
    if instance_exists(objSurfacer)
    {
        if surface_exists(objSurfacer.footsteps) {
        
        surface_set_target(objSurfacer.footsteps)
        if sprite_index = sprHeroWalkDown draw_sprite_ext(sprFootSteps, irandom(4), x + 3 * footside, y, 1, 1, 270 , c_white, 1)
        if sprite_index = sprHeroWalkRight draw_sprite_ext(sprFootSteps, irandom(4), x, y + 3 * footside, 1, 1, 180 , c_white, 1)
        if sprite_index = sprHeroWalkLeft draw_sprite_ext(sprFootSteps, irandom(4), x, y + 3 * footside, 1, 1, 0 , c_white, 1)
        if sprite_index = sprHeroWalkUp draw_sprite_ext(sprFootSteps, irandom(4), x + 3 * footside, y, 1, 1, 90 , c_white, 1)
        surface_reset_target()
        }
        if footside = 1 footside = -1 else footside = 1
        foot = 8
    }
        } else foot -= 1
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
