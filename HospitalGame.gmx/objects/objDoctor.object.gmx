<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprPeopleWalkLeft</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>sprMask</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>image_speed = 0.125
walkforward = 0
walk = 1
sp = 0.8
pathpoint = 0
pathstart = 1
costume = choose(1,2)
color1 = c_white
color2 = merge_color( choose(c_blue, c_green, c_gray, c_yellow, c_red, c_maroon, c_aqua, c_lime, c_navy), c_white, random(1))
color3 = merge_color( choose(c_black, c_gray, c_aqua), c_white, random(1))
hair = choose(1,2)
haircolor = irandom(4)
//new_path = path_add()
//hair = 1

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>instance_destroy()
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>depth = -y
if walkforward &gt; 0 {
    x += sp * walk
    walkforward -= sp
    if walkforward &lt;= 0 {
        if pathpoint = 0 {
        image_speed = 0.15
        new_path = path_add()
        mp_path = mp_grid_path(objPathFinder.grid, new_path, x, y, 1096, choose(75, 250), 1)
        path_start( new_path, sp, path_action_stop, 0)
        }
    }
    exit
}

if pathpoint = 1 {
    if pathstart = 1 {
    image_speed = 0.15
    new_path = path_add()
    mp_path = mp_grid_path(objPathFinder.grid, new_path, x, y, 0, 210 + random(40), 1)
    path_start( new_path, sp, path_action_stop, 0)
    pathpoint = 1  
    pathstart = -1
        }
}

if direction = 90 sprite_index = sprPeopleWalkUp else
if direction = 0 sprite_index = sprPeopleWalkLeft else
if direction = 270 sprite_index = sprPeopleWalkDown else
if direction = 180 sprite_index = sprPeopleWalkRight else
if direction &gt; 90 and direction &lt; 270 sprite_index = sprPeopleWalkRight else
sprite_index = sprPeopleWalkLeft

if path_index = -1 { 
    if pathpoint = 1 {
        x -= sp
        sprite_index = sprPeopleWalkRight
        if x &lt; -35 instance_destroy()
    } else {
        sprite_index = sprPeopleIdleLeft
        instance_destroy() 
        }
    }
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_sprite_ext(sprite_index, image_index, x, y, image_xscale, image_yscale * -0.3, image_angle, c_black, 0.3)
draw_sprite_ext(sprite_index, image_index, x, y, image_xscale * 0.9, image_yscale * 0.9, image_angle, image_blend, image_alpha)
if costume = 1 {
draw_sprite_ext(scrGetCostume(costume,sprite_index), image_index, x, y, image_xscale * 0.9, image_yscale * 0.9, image_angle, color1, image_alpha)
draw_sprite_ext(scrGetCostume2(costume,sprite_index), image_index, x, y, image_xscale * 0.9, image_yscale * 0.9, image_angle, color2, image_alpha)
draw_sprite_ext(scrGetCostume3(costume,sprite_index), image_index, x, y, image_xscale * 0.9, image_yscale * 0.9, image_angle, color3, image_alpha)
}
if costume = 2 {
draw_sprite_ext(scrGetCostume(costume,sprite_index), image_index, x, y, image_xscale * 0.9, image_yscale * 0.9, image_angle, color2, image_alpha)
draw_sprite_ext(scrGetCostume2(costume,sprite_index), image_index, x, y, image_xscale * 0.9, image_yscale * 0.9, image_angle, color2, image_alpha)
}
draw_sprite_ext(scrGetHairSprite(),haircolor,x,y + scrGetHairY() * 0.9, image_xscale * 0.9, image_yscale * 0.9, 0, c_white, 1)
//draw_sprite_ext(scrGetHairSprite()
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
